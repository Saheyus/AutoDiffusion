@page "/languages"
@using Autodiffusion.Services;
@using AutoDiffusion.Models
@inject LanguageService LanguageService

<h1 class="text-white">Languages</h1>

<h5 class="text-white">Add New Language</h5>
<form @onsubmit="AddLanguage" class="mb-3">
    <input @bind="newLanguage" placeholder="New Language Name" class="form-control" />
    <button type="submit" class="btn btn-primary mt-2">Add</button>
</form>

<h5 class="text-white">Existing Languages</h5>
<ul class="list-unstyled">
    @foreach (LanguageModel lang in languages)
    {
        <li class="text-white d-flex align-items-center mb-2">
            <div class="col-1">
                <span>@lang.Language</span>
            </div>
            <div class="col-4">
                <button class="btn btn-danger" @onclick="() => DeleteLanguage(lang.Language)">Delete</button>
            </div>
        </li>
    }
</ul>

@code {
    private List<LanguageModel> languages = new();
    private string newLanguage = string.Empty;

    protected override async Task<Task> OnInitializedAsync()
    {
        languages = await LanguageService.GetLanguagesAsync();
        return base.OnInitializedAsync();
    }

    private async Task AddLanguage()
    {
        if (!string.IsNullOrWhiteSpace(newLanguage))
        {
            await LanguageService.AddLanguageWithConfigAsync(new LanguageModel { Language = newLanguage });
            newLanguage = string.Empty;
            languages = await LanguageService.GetLanguagesAsync();
        }
    }

    private async Task DeleteLanguage(string languageName)
    {
        await LanguageService.DeleteLanguageAsync(languageName);
        languages = await LanguageService.GetLanguagesAsync();
    }
}
